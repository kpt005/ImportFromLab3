
name: Docker CI/CD Pipeline

on:
  push:
    branches:
      - main
    paths:
      - "Front end/**"
      - "Back end/**"
      - "docker-compose.yaml"

env:
      # IMAGE_FRONTEND: ${{ secrets.DOCKER_USERNAME }}/frontend_js
      IMAGE_FRONTEND: manapat2548/frontend_js
      # IMAGE_BACKEND: ${{ secrets.DOCKER_USERNAME }}/backend_js
      IMAGE_BACKEND: manapat2548/backend_js
      
#variables:
      #DOCKER_USERNAME: your-docker-username
      DOCKER_USERNAME: manapat2548
      #DOCKER_PASSWORD: your-docker-password 
      DOCKER_PASSWORD: abbb12345

      #EC2_HOST: your-ec2-ip
      EC2_HOST: ec2-44-211-78-14.compute-1.amazonaws.com
      #EC2_USERNAME: ubuntu
      EC2_USERNAME: ubuntu
      EC2_PRIVATE_KEY: "-----BEGIN RSA PRIVATE KEY----- MIIEowIBAAKCAQEAw4nWH9ByjABDWrEaD30y+J6L6BOx3tJjxnClOa9ghNcBUKG2 MT8zSyK0K6kfN4pzVrT1oSNbBW33xxPbmfrtnmJKngds3ftWr8qKmZ4aIoiWlvx+ ARPcElIeSwJE+GucilC11UVWsH93mvBB7uJTEhb03FdYd3Tbg+xXpcJQOlGGUAD5 rMKlEwwfJMCbRuO737frNaeipWDBQDCuiecasQGhorAmELEJ5jy661lquih7yJZm F3RI5eHvbdDWtLZ7UboHPMllp+/3SitLfCYFQZqVDRG85w5S7Y05DIdcZKZ1wmVX UDG3Aiv/0Rj5JpYPq4Ev9Ob0FB9oPj2Lepcs1QIDAQABAoIBAHfJdNdAhyuk7Z4d aG2csSEFX4foqMpr8JucXlucSHCYlkGjD03T/cRFmkI09N69fjLb4K26TwRgfa4D SEBoLDEe3b85pUPHuS8v0QCSjkghjL8qJrbaR7Mhg1VIKqBUrC0/jGT+eUDelZLh JEMHewRV8+MXzyY+/Esw+fCdvTA7trb59TOtWFjFfimGhuc3ZqK13+iexpzVagVs 9NR+CaEOAYBQ2uuOFxeg2oxHHK4RIIwyChu/qDI2n+Bllwj5KcryrXxmyYNArHLu p//ajYh9z+qVLxxBE/YnCAOoTCy+JDuzu6jW+SucHWG83Sk00EAVL9OCTvYz1fNM Hfio7nECgYEA6i55wohx8p9v9T1pv0xDBB4ri7Oe7WlpLgks8YACiNVlateOBQIo 0YRpVWSTW5OgLsNX7yxHO6aMZHdCtKEu9RusSlJJrLfnzbjYR+Vq3zo1RLhoyEj7 or4MBlwtW5ManCRhKD4+zib2xUGSef27HARhazpWOF1LKvhh3eQyR78CgYEA1cGs el1AyAqXc7KdYS8NfMyQQjyxTheLfVAeYJ9c8VtRuKdB43VDKN0ezYf8wzz9yeM6 fxg1KbMjIWBERb4Ig5vef67QYm9eF73jaH+h1o83p/cswgFQb5w3UeP/nMDZ0IaG n6x/BlMGcfJyiGepvfu3lBxQmKqLAv+AGtK40GsCgYEArOdLtzoPB9h4TVXesgOY p32vISKqARiHNBpKOLUPKgCFNPGaRlBl2uws6YOs2TySVHSehFTo8z3xAmybr8oi ZY7dErLW+tN+LwJ/jfXxhofvtKGDm/1m7a3sKvX791URnJ+vrIrozEUwhkv33mJc uD7zvrv/1PXs/fkOKUrHZPkCgYBfRmr1Q3lrcGUfGZ7SQWG2nYszKtAwqYfv+/T+ RinsHjLnpg1VL+AWZ7CiFZnQ/+9yvAhHu+d+Ra1D5B+qIlCzMJdUu/t/1HnRBT9G RZVCCCXbhO17L5DFnpB9vK0jFkY/jqaUpxMbI4h8436vU90xo++oYZJ+6Yz6ch2M Vx4vLwKBgGf5c3cTaIxU93GrFqJg+xKdiXuiQPZ/IcQxGVQqeEiGQrfnP/z0E00r eFyRyBkcSFixc/8Scdx7H8JWeEP8adL/PR4E+Kj2ikoD6Pqf14iO9HDE60mihB1l yGNHdYbHmFrbJGJr0Jjdo7Hc8nwqx1DeFxK+PhneySXT0nPu06Ak -----END RSA PRIVATE KEY-----"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: manapat2548
          password: abbb12345

      - name: Build and Push Frontend Image
        run: |
          docker build -t $IMAGE_FRONTEND:${{ github.sha }} -t $IMAGE_FRONTEND:latest -f "Front end/Dockerfile" "Front end"
          docker push $IMAGE_FRONTEND:${{ github.sha }}
          docker push $IMAGE_FRONTEND:latest

      - name: Build and Push Backend Image
        run: |
          docker build -t $IMAGE_BACKEND:${{ github.sha }} -t $IMAGE_BACKEND:latest -f "Back end/Dockerfile" "Back end"
          docker push $IMAGE_BACKEND:${{ github.sha }}
          docker push $IMAGE_BACKEND:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ec2-44-211-78-14.compute-1.amazonaws.com
          username: ubuntu
          key: MIIEowIBAAKCAQEAw4nWH9ByjABDWrEaD30y+J6L6BOx3tJjxnClOa9ghNcBUKG2 MT8zSyK0K6kfN4pzVrT1oSNbBW33xxPbmfrtnmJKngds3ftWr8qKmZ4aIoiWlvx+ ARPcElIeSwJE+GucilC11UVWsH93mvBB7uJTEhb03FdYd3Tbg+xXpcJQOlGGUAD5 rMKlEwwfJMCbRuO737frNaeipWDBQDCuiecasQGhorAmELEJ5jy661lquih7yJZm F3RI5eHvbdDWtLZ7UboHPMllp+/3SitLfCYFQZqVDRG85w5S7Y05DIdcZKZ1wmVX UDG3Aiv/0Rj5JpYPq4Ev9Ob0FB9oPj2Lepcs1QIDAQABAoIBAHfJdNdAhyuk7Z4d aG2csSEFX4foqMpr8JucXlucSHCYlkGjD03T/cRFmkI09N69fjLb4K26TwRgfa4D SEBoLDEe3b85pUPHuS8v0QCSjkghjL8qJrbaR7Mhg1VIKqBUrC0/jGT+eUDelZLh JEMHewRV8+MXzyY+/Esw+fCdvTA7trb59TOtWFjFfimGhuc3ZqK13+iexpzVagVs 9NR+CaEOAYBQ2uuOFxeg2oxHHK4RIIwyChu/qDI2n+Bllwj5KcryrXxmyYNArHLu p//ajYh9z+qVLxxBE/YnCAOoTCy+JDuzu6jW+SucHWG83Sk00EAVL9OCTvYz1fNM Hfio7nECgYEA6i55wohx8p9v9T1pv0xDBB4ri7Oe7WlpLgks8YACiNVlateOBQIo 0YRpVWSTW5OgLsNX7yxHO6aMZHdCtKEu9RusSlJJrLfnzbjYR+Vq3zo1RLhoyEj7 or4MBlwtW5ManCRhKD4+zib2xUGSef27HARhazpWOF1LKvhh3eQyR78CgYEA1cGs el1AyAqXc7KdYS8NfMyQQjyxTheLfVAeYJ9c8VtRuKdB43VDKN0ezYf8wzz9yeM6 fxg1KbMjIWBERb4Ig5vef67QYm9eF73jaH+h1o83p/cswgFQb5w3UeP/nMDZ0IaG n6x/BlMGcfJyiGepvfu3lBxQmKqLAv+AGtK40GsCgYEArOdLtzoPB9h4TVXesgOY p32vISKqARiHNBpKOLUPKgCFNPGaRlBl2uws6YOs2TySVHSehFTo8z3xAmybr8oi ZY7dErLW+tN+LwJ/jfXxhofvtKGDm/1m7a3sKvX791URnJ+vrIrozEUwhkv33mJc uD7zvrv/1PXs/fkOKUrHZPkCgYBfRmr1Q3lrcGUfGZ7SQWG2nYszKtAwqYfv+/T+ RinsHjLnpg1VL+AWZ7CiFZnQ/+9yvAhHu+d+Ra1D5B+qIlCzMJdUu/t/1HnRBT9G RZVCCCXbhO17L5DFnpB9vK0jFkY/jqaUpxMbI4h8436vU90xo++oYZJ+6Yz6ch2M Vx4vLwKBgGf5c3cTaIxU93GrFqJg+xKdiXuiQPZ/IcQxGVQqeEiGQrfnP/z0E00r eFyRyBkcSFixc/8Scdx7H8JWeEP8adL/PR4E+Kj2ikoD6Pqf14iO9HDE60mihB1l yGNHdYbHmFrbJGJr0Jjdo7Hc8nwqx1DeFxK+PhneySXT0nPu06Ak
          script: |

            # Set project directory
            PROJECT_DIR="/home/ubuntu/usr/src/app2"
      
            # Check if project folder exists, if not, create it
            if [ ! -d "$PROJECT_DIR" ]; then
              echo "Project folder not found. Creating..."
              mkdir -p $PROJECT_DIR
            else
              echo "Project folder exists."
            fi
      
            # Move into the project directory
            cd $PROJECT_DIR
      
            # Ensure docker-compose-forenv.yaml exists, if not, fetch from GitHub
            if [ ! -f "docker-compose-forenv.yaml" ]; then
              echo "docker-compose-forenv.yml not found. Downloading from GitHub..."
              curl -o docker-compose.yml https://raw.githubusercontent.com/kpt005/ImportFromLab3/main/docker-compose-forenv.yaml
            else
              echo "docker-compose-forenv.yaml already exists."
            fi
            
            # Stop and remove existing containers
            docker-compose down || true
            
            docker pull $DOCKER_USERNAME/frontend_js:latest
            docker pull $DOCKER_USERNAME/backend_js:latest
            docker-compose up -d
